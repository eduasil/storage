name: 🚀 Deploy Storage Account

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destruir infraestrutura?'
        required: true
        default: 'false'

permissions:
  id-token: write
  contents: read

jobs:
  sentinel-check:
    if: ${{ github.event.inputs.destroy == 'false' }}
    name: 🧠 Validar Acessos e Terraform com Sentinel
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🔐 Login no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZ_GITHUB_ACTION_SP }}

      - name: 🛠️ Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: 🔍 Verificar Token do Terraform Cloud
        run: |
          if [ -z "${{ secrets.TF_TOKEN_app_terraform_io }}" ]; then
            echo "❌ Token do Terraform Cloud não encontrado!"
            exit 1
          fi
          echo "✅ Token encontrado"

      - name: ▶️ Criar Run no Terraform Cloud (Sentinel Check)
        env:
          TFC_TOKEN: ${{ secrets.TF_TOKEN_app_terraform_io }}
          TFC_WORKSPACE_ID: ${{ secrets.TFC_WORKSPACE_ID }}
        run: |
          echo "🔄 Criando run remoto no Terraform Cloud..."
          response=$(curl -s \
            -H "Authorization: Bearer $TFC_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            -X POST \
            -d '{
              "data": {
                "attributes": { "is-destroy": false, "message": "Plan via GitHub Actions" },
                "type": "runs",
                "relationships": { "workspace": { "data": { "type": "workspaces", "id": "'"$TFC_WORKSPACE_ID"'" } } }
              }
            }' \
            https://app.terraform.io/api/v2/runs)
          
          run_id=$(echo "$response" | jq -r '.data.id')
          echo "🆔 Run ID: $run_id"

          echo "⏳ Aguardando resultado do Sentinel..."
          while true; do
            status=$(curl -s \
              -H "Authorization: Bearer $TFC_TOKEN" \
              https://app.terraform.io/api/v2/runs/$run_id \
              | jq -r '.data.attributes.status')
            echo "Status atual: $status"
            if [[ "$status" == "policy_hard_failed" ]]; then
              echo "❌ Policy Check falhou! Run bloqueado pelo Sentinel."
              exit 1
            elif [[ "$status" == "planned" || "$status" == "policy_checked" ]]; then
              echo "✅ Policy Check aprovado!"
              break
            fi
            sleep 10
          done